const express = require('express');
const router = express.Router();
const Car = require('../models/Car');
const { verifyToken } = require('../middlewares/auth');

// Obtener todos los vehículos (ruta pública)
router.get('/', async (req, res, next) => {
  try {
    const cars = await Car.find();
    res.json(cars);
  } catch (error) {
    next(error);
  }
});

// Obtener un vehículo por ID (ruta pública)
router.get('/:id', async (req, res, next) => {
  try {
    const car = await Car.findById(req.params.id);
    if (!car) return res.status(404).json({ error: 'Vehículo no encontrado' });
    res.json(car);
  } catch (error) {
    next(error);
  }
});

// Crear un nuevo vehículo (ruta protegida)
router.post('/', verifyToken, async (req, res, next) => {
  try {
    const newCar = new Car(req.body);
    const savedCar = await newCar.save();
    res.status(201).json(savedCar);
  } catch (error) {
    next(error);
  }
});

// Actualizar un vehículo (ruta protegida)
router.put('/:id', verifyToken, async (req, res, next) => {
  try {
    const updatedCar = await Car.findByIdAndUpdate(req.params.id, req.body, { new: true });
    if (!updatedCar) return res.status(404).json({ error: 'Vehículo no encontrado' });
    res.json(updatedCar);
  } catch (error) {
    next(error);
  }
});

// Eliminar un vehículo (ruta protegida)
router.delete('/:id', verifyToken, async (req, res, next) => {
  try {
    const deletedCar = await Car.findByIdAndDelete(req.params.id);
    if (!deletedCar) return res.status(404).json({ error: 'Vehículo no encontrado' });
    res.json({ message: 'Vehículo eliminado' });
  } catch (error) {
    next(error);
  }
});

module.exports = router;
